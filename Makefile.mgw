### Mingw Configuration ###
ifndef ORACLE_HOME
ORACLE_HOME=c:/oraclexe/app/oracle/product/10.2.0/server
endif

# Lua source path: expected to be built with 'make generic'.
LUASRCPATH=../lua-5.2.0/src
# Lua binary path: expected to be Lua binary's one, or to be built 'make mingw'.
LUABINPATH="c:/Program Files/Lua/5.2"

CC=gcc
PREFIX=/usr/local
CFLAGS=-mno-cygwin -Wall
LDFLAGS=-mno-cygwin -Wl,--exclude-libs,ALL 
INCLUDES=-I$(PREFIX)/include -I$(LUASRCPATH) -I$(ORACLE_HOME)/oci/include
# oluacle.dll dynamic link to Lua built with 'make CC="cc -mno-cygwin" mingw'
DLLS=-llua52 -L$(LUABINPATH) -loci -L$(ORACLE_HOME)/oci/lib/msvc
# oluacle.exe static link  to Lua built with 'make CC="cc -mno-cygwin" generic'
LIBS=-llua -L$(PREFIX)/lib -L$(LUASRCPATH) -loci -L$(ORACLE_HOME)/oci/lib/msvc
EXE=oluacle.exe
DLL=oluacle.dll
###

all : $(EXE) $(DLL)

# dynamic linked library
$(DLL) : olua.o
	$(CC) $(LDFLAGS) -shared -o $@ $^ $(DLLS)

# mingw standalone executable
$(EXE) : olua.o luaone.o
	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)

olua.o : olua.c
luaone.o : luaone.c 

.c.o :
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

clean:
	rm *.o $(EXE) $(DLL)
package :
	zip -9 oluacle-`date +%Y%m%d%H`.zip readme*.txt $(DLL) $(EXE) Makefile.* *.c *.def tstcode.lua sample*

memorytest:
	./$(EXE) test1.lua 2>&1 | gawk '/ALLOC:/{ m[$$2]++ } /FREE:/{ m[$$2]-- } END{for(i in m){ if(m[i]){ print "NG:",i,m[i] }else{ print "OK:",i,m[i] }}}'

# vim:set noet ts=8 sw=8:
